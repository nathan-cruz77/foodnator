# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2019-05-05 22:50
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ActivityLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=64)),
                ('jsondata', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='criado em')),
                ('fromuser', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='activitylogs_withfromuser', to=settings.AUTH_USER_MODEL)),
                ('logged_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Cuisine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('users', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Preference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('only_free_delivery', models.BooleanField()),
                ('min_rating', models.DecimalField(decimal_places=1, max_digits=2)),
            ],
        ),
        migrations.CreateModel(
            name='PriceRange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='Restaurant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('delivery_fee', models.DecimalField(decimal_places=2, max_digits=5)),
                ('rating', models.DecimalField(decimal_places=1, max_digits=2)),
                ('slug', models.SlugField(max_length=255)),
                ('avatar', models.URLField()),
                ('cuisine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Cuisine')),
                ('price_range', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.PriceRange')),
            ],
        ),
        migrations.AddField(
            model_name='preference',
            name='price_range',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.PriceRange'),
        ),
        migrations.AddField(
            model_name='preference',
            name='rejected_cuisines',
            field=models.ManyToManyField(related_name='rejected_by', to='core.Cuisine'),
        ),
        migrations.AddField(
            model_name='preference',
            name='selected_cuisines',
            field=models.ManyToManyField(related_name='selected_by', to='core.Cuisine'),
        ),
        migrations.AddField(
            model_name='preference',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
